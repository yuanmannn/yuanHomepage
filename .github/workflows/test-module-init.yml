name: Module Init, HTML and Lighthouse Check

permissions:
  contents: read
  id-token: write
  pull-requests: write
  checks: write
  statuses: write

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    test-module-init:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Setup Hugo
              uses: peaceiris/actions-hugo@v3
              with:
                hugo-version: ${{ vars.HUGO_VERSION || 'latest' }}
                extended: true

            - name: Create test site
              run: |
                  hugo new site test-site
                  cd test-site
                    
            - name: Initialize Hugo module
              working-directory: ./test-site
              run: |
                    hugo mod init github.com/zetxek/test-site
                    hugo mod get -u github.com/zetxek/adritian-free-hugo-theme

            - name: Configure module ref
              if: github.ref != 'refs/heads/main'
              working-directory: ./test-site
              run: |
                # Use the branch that initiated the PR
                branch_name=${GITHUB_HEAD_REF}
                echo "Using branch: ${branch_name}"
                hugo mod get -u github.com/zetxek/adritian-free-hugo-theme@${branch_name}

            - name: Configure Hugo module in hugo.toml
              working-directory: ./test-site
              run: |
                echo '[module]
                [[module.imports]]
                path = "github.com/zetxek/adritian-free-hugo-theme"' > hugo.toml
            
            - name: Validate Hugo module configuration
              working-directory: ./test-site
              run: |
                hugo mod verify
                hugo mod graph
                
            - name: Upload test site
              uses: actions/upload-artifact@v4
              with:
                name: test-site
                path: test-site
                retention-days: 1

    build-site:
        needs: test-module-init
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            
            - name: Setup Hugo
              uses: peaceiris/actions-hugo@v3
              with:
                hugo-version: 'latest'
                extended: true
                
            - name: Download test site
              uses: actions/download-artifact@v4
              with:
                name: test-site
                path: test-site

            - name: Pack dependencies
              working-directory: ./test-site
              run: |
                    hugo mod npm pack

            - name: (debug) Cat package.json
              working-directory: ./test-site
              run: |
                    cat package.json

            - name: Npm install (bootstrap)
              working-directory: ./test-site
              run: |
                    npm install

            - name: (debug) ls node_modules
              working-directory: ./test-site
              run: |
                    ls node_modules

            - name: Run helper script (copy config and content)
              working-directory: ./test-site
              run: |
                    ./node_modules/@zetxek/adritian-theme-helper/dist/scripts/download-content.js

            - name: Run build
              working-directory: ./test-site
              run: hugo

            - name: Upload built site
              uses: actions/upload-artifact@v4
              with:
                name: built-site
                path: test-site/public
                retention-days: 1

    validate-html:
        needs: build-site
        runs-on: ubuntu-latest
        steps:
            - name: Download built site
              uses: actions/download-artifact@v4
              with:
                name: built-site
                path: ./public

            - name: Print index.html
              working-directory: ./public
              run: |
                    cat index.html

            # Validate HTML syntax with https://github.com/marketplace/actions/html5-validator
            - name: Validate HTML syntax
              uses: Cyb3r-Jak3/html5validator-action@v7.2.0
              with:
                root: ./public
                skip_git_check: true

    lighthouse-check:
        needs: build-site
        runs-on: ubuntu-latest
        steps:
            - name: Download built site
              uses: actions/download-artifact@v4
              with:
                name: built-site
                path: ./public
                
            - name: Create output directory
              run: mkdir -p ${{ github.workspace }}/tmp/artifacts
                
            - name: Start local server
              run: |
                npx http-server ./public -p 8080 &
                sleep 3 # Give server time to start
                
            - name: Lighthouse Check
              id: lighthouse
              uses: foo-software/lighthouse-check-action@v12.0.1
              with:
                device: 'all'
                gitHubAccessToken: ${{ secrets.GITHUB_TOKEN }}
                prCommentEnabled: false
                urls: 'http://localhost:8080'
                outputDirectory: ${{ github.workspace }}/tmp/artifacts
                
            - name: Format Lighthouse results
              id: format-results
              run: |
                echo "## ðŸ”¦ Lighthouse Performance Report" > comment.md
                echo "" >> comment.md
                echo "**Test Results for commit:** \`${{ github.sha }}\`" >> comment.md
                echo "" >> comment.md
                
                # Function to get score emoji
                get_emoji() {
                  score=$1
                  if (( $(echo "$score >= 90" | bc -l) )); then
                    echo "ðŸŸ¢"
                  elif (( $(echo "$score >= 50" | bc -l) )); then
                    echo "ðŸŸ "
                  else
                    echo "ðŸ”´"
                  fi
                }
                
                # Parse and format the results from Lighthouse outputs
                for device in "mobile" "desktop"; do
                  # Look for lighthouse report files
                  report_file=$(find "${{ github.workspace }}/tmp/artifacts" -name "*${device}*.json" -type f | head -n 1)
                  
                  if [ -f "$report_file" ]; then
                    echo "### ${device^} Results" >> comment.md
                    echo "" >> comment.md
                    echo "| Category | Score |" >> comment.md
                    echo "|----------|-------|" >> comment.md
                    
                    # Extract scores using jq
                    perf=$(jq -r '.categories.performance.score * 100 | floor' "$report_file")
                    a11y=$(jq -r '.categories.accessibility.score * 100 | floor' "$report_file")
                    bp=$(jq -r '.categories["best-practices"].score * 100 | floor' "$report_file")
                    seo=$(jq -r '.categories.seo.score * 100 | floor' "$report_file")
                    
                    echo "| Performance | $(get_emoji $perf) $perf |" >> comment.md
                    echo "| Accessibility | $(get_emoji $a11y) $a11y |" >> comment.md
                    echo "| Best Practices | $(get_emoji $bp) $bp |" >> comment.md
                    echo "| SEO | $(get_emoji $seo) $seo |" >> comment.md
                    echo "" >> comment.md
                  fi
                done
                
                echo "ðŸ“Š **Full detailed reports are available in the workflow artifacts.**" >> comment.md
                echo "" >> comment.md
                echo "_Report generated at $(date)_" >> comment.md
                
            - name: Update PR comment
              uses: marocchino/sticky-pull-request-comment@v2
              if: github.event_name == 'pull_request'
              with:
                header: lighthouse-report
                path: comment.md
                
            - name: Upload Lighthouse report
              uses: actions/upload-artifact@v4
              with:
                name: lighthouse-report              
                path: ${{ github.workspace }}/tmp/artifacts
